name: Build plugin ZIP

on:
  push:
    branches: ['**']
    tags: ['v*']
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine plugin version
        id: version
        run: |
          VERSION=$(grep -E '^[[:space:]]*\*[[:space:]]*Version:' fp-experiences.php | head -n 1 | sed -E 's/^[[:space:]]*\*[[:space:]]*Version:[[:space:]]*//;s/[[:space:]]*$//')
          if [ -z "$VERSION" ]; then
            echo "Unable to determine plugin version" >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Make build script executable
        run: chmod +x .github/scripts/build-zip.sh

      - name: Build ZIP
        run: .github/scripts/build-zip.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fp-experiences-${{ steps.version.outputs.version }}
          path: fp-experiences-${{ steps.version.outputs.version }}.zip
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: fp-experiences-${{ needs.build.outputs.version }}
          path: dist

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/fp-experiences-${{ needs.build.outputs.version }}.zip
          name: FP Experiences v${{ needs.build.outputs.version }}
          overwrite: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
