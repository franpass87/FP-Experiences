name: Deploy Plugin on Merge

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer

      - name: Install Composer dependencies
        if: hashFiles('composer.json') != ''
        run: |
          composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
          composer dump-autoload -o

      - name: Determine plugin version
        id: version
        run: |
          VERSION=$(grep -E '^[[:space:]]*\*[[:space:]]*Version:' fp-experiences.php | head -n 1 | sed -E 's/^[[:space:]]*\*[[:space:]]*Version:[[:space:]]*//;s/[[:space:]]*$//')
          if [ -z "$VERSION" ]; then
            echo "Unable to determine plugin version" >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "ðŸ“¦ Plugin version: $VERSION"

      - name: Make build script executable
        run: chmod +x .github/scripts/build-zip.sh

      - name: Build plugin ZIP
        run: .github/scripts/build-zip.sh

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: fp-experiences-${{ steps.version.outputs.version }}
          path: fp-experiences-${{ steps.version.outputs.version }}.zip
          if-no-files-found: error

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: FP Experiences v${{ steps.version.outputs.version }}
          body: |
            ## ðŸš€ Release automatica v${{ steps.version.outputs.version }}
            Creata automaticamente dopo il merge su ${{ github.ref_name }}.
            ### ðŸ“¦ Allegati
            Scarica lo ZIP per installare/aggiornare il plugin.
            ---
            **Commit:** ${{ github.sha }}
            **Branch:** ${{ github.ref_name }}
          files: fp-experiences-${{ steps.version.outputs.version }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # OPTIONAL: Deploy diretto via SSH al tuo WP (non serve per Git Updater)
      - name: Deploy to WordPress via WP-CLI (optional)
        if: ${{ vars.ENABLE_WP_DEPLOY == 'true' }}
        run: |
          echo "ðŸ”„ Deploying to WordPress site..."
          
          # Installa sshpass se necessario
          sudo apt-get update && sudo apt-get install -y sshpass
          
          # Carica il plugin via SSH
          sshpass -p "${{ secrets.WP_SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no \
            fp-experiences-${{ steps.version.outputs.version }}.zip \
            ${{ secrets.WP_SSH_USER }}@${{ secrets.WP_SSH_HOST }}:/tmp/
          
          # Installa il plugin via WP-CLI (--force sovrascrive la versione esistente)
          sshpass -p "${{ secrets.WP_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.WP_SSH_USER }}@${{ secrets.WP_SSH_HOST }} \
            "cd ${{ secrets.WP_INSTALL_PATH }} && \
             wp plugin install /tmp/fp-experiences-${{ steps.version.outputs.version }}.zip --force --activate"
          
          echo "âœ… Plugin deployed successfully!"

