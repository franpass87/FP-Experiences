name: Build plugin zip

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Dump autoloader
        run: composer dump-autoload -o --classmap-authoritative

      - name: Determine plugin slug
        id: slug
        run: |
          SLUG=$(php -r '
          $root = $argv[1];
          $candidates = glob($root . "/*.php");
          foreach ($candidates as $candidate) {
              $handle = fopen($candidate, "rb");
              if ($handle === false) {
                  continue;
              }
              $buffer = "";
              $linesRead = 0;
              while (! feof($handle) && $linesRead < 20) {
                  $buffer .= (string) fgets($handle);
                  $linesRead++;
              }
              fclose($handle);
              if (preg_match("/^\\s*\\*\\s*Plugin Name\\s*:/mi", $buffer) && preg_match("/^\\s*\\*\\s*Version\\s*:/mi", $buffer)) {
                  echo basename($candidate, ".php");
                  exit(0);
              }
          }
          exit(1);
          ' "$PWD")
          echo "slug=$SLUG" >> "$GITHUB_OUTPUT"

      - name: Prepare build directory
        run: |
          mkdir -p build
          rsync -a --delete \
            --exclude=.git \
            --exclude=.github \
            --exclude=tests \
            --exclude=docs \
            --exclude=node_modules \
            --exclude=*.md \
            --exclude=phpcs.xml* \
            --exclude=.idea \
            --exclude=.vscode \
            --exclude=build \
            --exclude=.gitattributes \
            --exclude=.gitignore \
            --exclude=tools \
            --exclude=build.sh \
            --exclude=.codex-progress.json \
            --exclude=.rebuild-state.json \
            ./ build/${{ steps.slug.outputs.slug }}/

      - name: Create zip
        run: |
          cd build
          zip -rq "${{ steps.slug.outputs.slug }}.zip" "${{ steps.slug.outputs.slug }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: build/${{ steps.slug.outputs.slug }}.zip
          if-no-files-found: error
